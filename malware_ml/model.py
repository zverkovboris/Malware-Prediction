import pickle
import catboost as cb
from keras.optimizers import Adam
from keras import models


from malware_ml.neural_net_metrics import precision, recall, f1
from malware_ml.prepare_data import prepare


def load_neural_net(model_path):
    model = models.load_model(model_path, custom_objects={'precision': precision, 'recall': recall, 'f1': f1})
    model.compile(optimizer=Adam(lr=0.01), loss="binary_crossentropy", metrics=[precision, recall, f1])
    return model


def load_catboost(model_path):
    return cb.CatBoostClassifier().load_model(model_path)


def load_classifier(model_path):
    return pickle.load(open(model_path, 'rb'))


def load_model(model_path):
    if model_path.endswith('cb'):
        return load_catboost(model_path)
    if model_path.endswith('pkl'):
        return load_classifier(model_path)
    else:
        return load_neural_net(model_path)


def apply_model(model, data):
    res = model.predict_proba(prepare(data))
    return res[0][0]
